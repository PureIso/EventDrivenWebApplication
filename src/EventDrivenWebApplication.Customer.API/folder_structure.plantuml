@startuml
package "EventDrivenWebApplication.Domain" {
    class "Product" as Product
    class "Customer" as Customer
    interface "IProductService" as IProductService
    interface "ICustomerService" as ICustomerService
}

package "EventDrivenWebApplication.Infrastructure" {
    class "CustomerDbContext" as CustomerDbContext
    class "ProductDbContext" as ProductDbContext
    class "ProductCreatedEvent" as ProductCreatedEvent

    ' Dependencies
    ProductDbContext --> Product : Uses
    CustomerDbContext --> Customer : Uses
    IProductService <.. ProductDbContext : Implements
    ICustomerService <.. CustomerDbContext : Implements
}

package "EventDrivenWebApplication.API" {
    class "ProductsController" as ProductsController
    class "CustomersController" as CustomersController
    class "ProductCreatedConsumer" as ProductCreatedConsumer
    class "MassTransitConfiguration" as MassTransitConfig
    class "ProductService" as ProductService
    class "CustomerService" as CustomerService

    ' Dependencies
    ProductsController --> ProductService : Uses
    CustomersController --> CustomerService : Uses
    ProductService --> IProductService : Implements
    CustomerService --> ICustomerService : Implements
    ProductCreatedConsumer --> ProductService : Uses
    MassTransitConfig --> ProductCreatedConsumer : Configures
    MassTransitConfig --> ProductCreatedEvent : Uses
}
@enduml